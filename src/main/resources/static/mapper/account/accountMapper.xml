<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nash.product.mapper.account.AccountMapper">

    <resultMap id="BaseResultMap" type="com.nash.product.entity.account.Account">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="belong" jdbcType="VARCHAR" property="belong" />
        <result column="access_key" jdbcType="VARCHAR" property="accessKey" />
        <result column="secret_key" jdbcType="VARCHAR" property="secretKey" />
        <result column="balance" jdbcType="BIGINT" property="balance" />
        <result column="date_time" jdbcType="TIMESTAMP" property="dateTime" />
    </resultMap>

    <select id="selectById" resultType="com.nash.product.entity.account.Account">
        select id,name,password,mobile,type,belong,balance,date_time from nashcloud_account where id = #{id}
    </select>

    <select id="selectByName" resultType="com.nash.product.entity.account.Account">
        SELECT
        a.id,
        a.NAME,a.type,service_type serviceType,
        mobile,a.password password,
        belong,
        balance,
        bt.fixed_space-bt.used unused,bt.expired_time expiredTime,
        a.date_time
        FROM
        nashcloud_account a
        left join crato_business_type bt on bt.`name`=a.`name`
        where a.name=#{name}
    </select>

    <select id="selectByIdAndName" resultType="com.nash.product.entity.account.Account">
        select id,name,password,mobile,type,belong,balance,date_time from nashcloud_account where id = #{id} and name = #{name}
    </select>

    <select id="list" resultType="com.nash.product.entity.account.Account">
        SELECT
        a.id,
        a.NAME,a.type,service_type serviceType,
        mobile,
        belong,
        balance,
        bt.fixed_space-bt.used unused,
        a.date_time
        FROM
        nashcloud_account a
        left join crato_business_type bt on bt.`name`=a.`name`
            where
            belong = #{belong}
        <if test="userName!=null and userName!=''">
            and a.name=#{userName}
        </if>
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from nashcloud_account
    </select>

    <select id="selectByMobile" resultType="com.nash.product.entity.account.Account">
        select id,name,password,mobile,type,belong,balance,date_time from nashcloud_account where mobile = #{mobile}
    </select>

    <select id="selectKeyByName" resultType="com.nash.product.entity.account.Account">
        select id,name,password,mobile,type,belong,access_key,secret_key,balance,date_time from nashcloud_account where belong = #{name}
    </select>

    <insert id="insertAccount" parameterType="com.nash.product.entity.account.Account">
        insert into nashcloud_account (name, password, mobile,type,belong,access_key,secret_key,balance,date_time)
        values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{belong,jdbcType=VARCHAR}, #{accessKey,jdbcType=VARCHAR}, #{secretKey,jdbcType=VARCHAR},
        #{balance,jdbcType=BIGINT},#{dateTime,jdbcType=BIGINT})
    </insert>

    <update id="updatePassByMobile" parameterType="com.nash.product.entity.account.Account">
        update nashcloud_account set password = #{password}
        where mobile = #{mobile}
    </update>

    <update id="updatePassByName" parameterType="com.nash.product.entity.account.Account">
        update nashcloud_account set password = #{password}
        where name = #{name}
    </update>
    <!-- -->
    <update id="updateBalance">
        update nashcloud_account set balance = balance-#{param1}
        where name = #{param2}
    </update>

</mapper>
